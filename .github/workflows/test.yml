name: linux

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        SETUP: ['/cvmfs/sw.hsf.org/key4hep/setup.sh', '/cvmfs/sw-nightlies.hsf.org/key4hep/setup.sh']
    steps:
    - uses: actions/checkout@v2
    - uses: cvmfs-contrib/github-action-cvmfs@v2
    - name: Start container
      run: |
        docker run -it --name CI_container -v ${GITHUB_WORKSPACE}:/Package -v /cvmfs:/cvmfs:shared -d ghcr.io/aidasoft/centos7:latest /bin/bash
    - name: CMake Configure
      run: |
        docker exec CI_container /bin/bash -c 'cd Package;\
         mkdir -p build install;\
         git submodule init;\
         git submodule update;\
         source ${{ matrix.SETUP }};\
         cmake -S . -B build -GNinja -DCMAKE_INSTALL_PREFIX=$PWD/install -DCMAKE_CXX_STANDARD=17;'

    - name: Build package
      run: |
        docker exec CI_container /bin/bash -c 'cd ./Package;\
        source ${{ matrix.SETUP }};\
        cmake --build build;\
        cmake --install build;'

    - name: Build Open Data Detector
      run: |
        docker exec CI_container /bin/bash -c 'cd ./Package;\
        source ${{ matrix.SETUP }};\
        git clone https://gitlab.cern.ch/acts/OpenDataDetector.git;\
        mkdir build_odd;\
        cmake -S OpenDataDetector -B build_odd -GNinja -DCMAKE_CXX_STANDARD=17 -DCMAKE_INSTALL_PREFIX=$PWD/install;\
        cmake --build build_odd;\
        cmake --install build_odd;'

    - name: Test
      run: |
        docker exec CI_container /bin/bash -c 'cd ./Package;\
        source ${{ matrix.SETUP }};\
        export ODD_XML=$PWD/install/share/OpenDataDetector/xml/OpenDataDetector.xml;\
        export CTEST_OUTPUT_ON_FAILURE=1;\
        source $PWD/install/bin/this_odd.sh;\
        echo $LD_LIBRARY_PATH;\
        cmake --build build -- test;'
